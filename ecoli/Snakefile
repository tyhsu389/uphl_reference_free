configfile: "config.yaml"

# Get samples
SAMPLES = []
for sample in open( config["samples"], "r" ):
        name = re.sub( "_R[1-9]_001.fastq.gz", "", sample.strip() )
        SAMPLES.append( name )

print( SAMPLES )

# Run workflow
subworkflow reffree:
	workdir: "../"
	snakefile: "../Snakefile"

rule final:
	input:  
		"all_resfinder_out.txt",
		"all_vfdb_out.txt",
		"all_ecoh_out.txt"

rule resfinder:
	input:
		reffree( "shovill/{sample}/contigs.fa" )
	output:
		"resfinder/{sample}_resfinder_out.txt"
	conda:
		reffree( "envs/abricate.yaml" )
	shell:
		"abricate -db resfinder {input} > {output}"

rule VFDB:
        input:
                reffree( "shovill/{sample}/contigs.fa" )
        output:
                "vfdb/{sample}_vfdb_out.txt"
        conda:
                reffree( "envs/abricate.yaml" )
        shell:
                "abricate -db vfdb {input} > {output}"

rule ecoh:
        input:
                reffree( "shovill/{sample}/contigs.fa" )
        output:
                "EcOH/{sample}_EcOH_out.txt"
        conda:
                reffree( "envs/abricate.yaml" )
        shell:
                "abricate -db ecoh {input} > {output}"

rule cat_resfinder:
	input:
		allres = expand( ["resfinder/{sample}_resfinder_out.txt"], sample=SAMPLES )
	output:
		res = "all_resfinder_out.txt",
	shell:
		"tail -vn +1 {input.allres} > {output.res}"

rule cat_vfdb:
	input:
                allvfdb = expand( ["vfdb/{sample}_vfdb_out.txt"], sample=SAMPLES )
	output:
                vfdb = "all_vfdb_out.txt",
	shell:
		"tail -vn +1 {input.allvfdb} > {output.vfdb}"

rule cat_ecoh:
	input:
                allecoh = expand( ["EcOH/{sample}_EcOH_out.txt"], sample=SAMPLES )
	output:
                ecoh = "all_ecoh_out.txt"
	shell:
		"tail -vn +1 {input.allecoh} > {output.ecoh}"
